//
// Created by 26363 on 2023/6/12.
//
#include "student.h"

/**
 * 初始化,把db/student文件中的学生信息读取到内存中
 * @return
 */
void Student::init()
{
    try
    {
        std::ifstream file(filename, std::ios::binary | std::ios::in);
        if (!file)
        {
            std::cout << "Failed to open file for reading." << std::endl;
            return;
        }

        stu *s = new stu;

        file.read(reinterpret_cast<char *>(s), sizeof(stu));
        this->student = s;
        file.close();
    }
    catch (const std::exception &e)
    {
        std::cerr << e.what() << '\n';
    }

    // 读取文件
    // while (fread(p, sizeof(stu), 1, stream))
    // {
    // std::cout << "sno:" << p->sno << endl;
    // 如果是第一个学生
    // if (!student)
    // {
    //     student = p;
    // }
    // else
    // {
    //     // 指向下一个学生的指针
    //     student->next = p;
    // }
    // }
    // fclose(stream);

    // stu *new_stu = new stu;
    // while (fp.is_open() && fp.read((char *)student, sizeof(stu)))
    // {
    //     // 如果是第一个学生
    //     if (!student)
    //     {
    //         student = new_stu;
    //     }
    //     else
    //     {
    //         // 否则添加到链表末尾
    //         stu *current = student;
    //         while (current->next)
    //         {
    //             current = current->next;
    //         }
    //         current->next = new_stu;
    //     }

    //     std::cout << "sno:" << new_stu->sno << endl;
    // }

    // 关闭文件
    // fp.close();
}

/**
 * 添加学生
 * @return
 */
void Student::addStudent()
{
    // 为新的学生分配内存
    stu *s = new stu;

    std::cout << "请输入学号：";
    cin >> s->sno;

    stu *p = searchStudent(s->sno);
    if (p)
    {
        std::cout << "学号已存在" << endl;
        return;
    }

    std::cout << "请输入姓名：";
    cin >> s->name;
    std::cout << "请输入年龄：";
    cin >> s->age;
    std::cout << "请输入性别：";
    cin >> s->gender;
    std::cout << "请输入出生日期：";
    cin >> s->birthday;
    std::cout << "请输入家庭住址：";
    cin >> s->address;
    std::cout << "请输入电话：";
    cin >> s->phone;
    std::cout << "请输入邮箱：";
    cin >> s->email;

    s->total = s->total ? s->total + 1 : 1;

    // 如果是第一个学生
    if (!student)
    {
        student = s;
    }
    else
    {
        // 指向下一个学生的指针
        student->next = s;
    }

    // 释放内存
    free(s);
}

/**
 * 删除学生
 * @return
 */
void Student::deleteStudent()
{
    std::cout << "请输入要删除的学生学号：";
    string sno;
    cin >> sno;

    // 查找学生
    stu *p = searchStudent(sno);

    if (!p)
    {
        std::cout << "没有该学生" << endl;
    }

    // 如果是第一个学生
    if (p == student)
    {
        student = student->next;
    }
    else
    {
        stu *pre = student;
        while (pre->next != p)
        {
            pre = pre->next;
        }
        pre->next = p->next;
    }
}

/**
 * 修改学生
 * @return
 */
void Student::modifyStudent()
{
    std::cout << "请输入要修改的学生学号：";
    string sno;
    cin >> sno;

    // 查找学生
    stu *p = searchStudent(sno);

    if (!p)
    {
        std::cout << "学号不存在" << endl;
        return;
    }

    // 输出学生信息
    std::cout << "   学号   " << p->sno;
    std::cout << "   姓名   " << p->name;
    std::cout << "   年龄   " << p->age;
    std::cout << "   性别   " << p->gender;

    while (true)
    {
        std::cout << "请选择你要修改的信息：" << endl;
        std::cout << "1.姓名" << endl;
        std::cout << "2.年龄" << endl;
        std::cout << "3.性别" << endl;
        std::cout << "4.出生日期" << endl;
        std::cout << "5.家庭住址" << endl;
        std::cout << "6.电话" << endl;
        std::cout << "7.邮箱" << endl;
        std::cout << "0.退出修改" << endl;

        int choice;
        cin >> choice;

        switch (choice)
        {
        case 1:
            std::cout << "请输入姓名：";
            cin >> p->name;
            break;
        case 2:
            std::cout << "请输入年龄：";
            cin >> p->age;
            break;
        case 3:
            std::cout << "请输入性别：";
            cin >> p->gender;
        case 4:
            std::cout << "请输入出生日期：";
            cin >> p->birthday;
        case 5:
            std::cout << "请输入家庭住址：";
            cin >> p->address;
        case 6:
            std::cout << "请输入电话：";
            cin >> p->phone;
        case 7:
            std::cout << "请输入邮箱：";
            cin >> p->email;
        case 0:
            return;
        default:
            std::cout << "输入错误，请重新输入" << endl;
            break;
        }
    }
}

/**
 * 查找学生
 * @param str       学号或姓名
 * @return
 */
stu *Student::searchStudent(string str)
{
    stu *pre = new stu, *p;

    if (!student)
    {
        return NULL;
    }

    p = student;

    // 遍历链表,查找学生
    while (p && (p->sno != str) && (p->name != str))
    {
        pre = p;
        p = p->next;
    }

    if (!p)
    {
        return NULL;
    }

    // 如果要删除的学生是第一个学生
    if (!pre)
    {
        student = p->next;
    }
    else
    {
        pre->next = p->next;
    }

    free(p);

    return student;
}

/**
 * 显示所有学生
 * @return
 */
void Student::showAllStudent()
{
    stu *s = this->student;

    if (!s)
    {
        std::cout << "没有学生信息" << endl;
        return;
    }

    // while (s-> next != NULL)
    // {
    //     std::cout << s->sno << endl;
    //     s = s->next;
    // }

    std::cout << s->sno << endl;

    // fstream fp;

    // // 以二进制方式打开文件
    // fp.open("db/student.bin", ios::in | ios::binary);

    // // 如果文件打开失败
    // if (!fp)
    // {
    //     std::cout << "文件打开失败" << endl;
    //     return;
    // }

    // std::cout << " |学号\t|\t姓名\t|\t年龄\t|\t性别\t|\t出生日期\t|\t家庭地址\t|\t电话\t|\t邮箱\t| " << endl;
    // std::cout << endl;

    // // 读取文件
    // while (fp.read((char *)student, sizeof(stu)))
    // {
    //     std::cout << " |" << student->sno << "\t|\t" << student->name << "\t|\t" << student->age << "\t|\t"
    //               << student->gender << "\t|\t" << student->birthday << "\t|\t" << student->address
    //               << "\t|\t" << student->phone << "\t|\t" << student->email << "\t|" << endl;
    // }

    // std::cout << endl;
    // // 关闭文件
    // fp.close();
}

/**
 * 保存学生信息到db/student.bin文件中
 * @return
 */
void Student::saveStudent()
{
    std::ofstream file(filename, std::ios::binary | std::ios::out);
    if (!file)
    {
        std::cout << "Failed to open file for writing." << std::endl;
        return;
    }
    file.write(reinterpret_cast<const char *>(student), sizeof(stu));
    file.close();
}

/**
 * 菜单
 * @return
 */
void Student::menu()
{
    // 初始化
    init();

    // 显示菜单
    while (true)
    {
        std::cout << "========================= 学生管理系统start ==========================" << endl;
        std::cout << "1. 添加学生" << endl;
        std::cout << "2. 删除学生" << endl;
        std::cout << "3. 修改学生" << endl;
        std::cout << "4. 查找学生" << endl;
        std::cout << "5. 显示所有学生" << endl;
        std::cout << "0. 退出" << endl;
        std::cout << "========================= 学生管理系统end ==========================" << endl;
        std::cout << endl;

        int choice;
        std::cout << "请输入你的选择：";
        cin >> choice;
        std::cout << endl;

        switch (choice)
        {
        case 1:
            addStudent();
            break;
        case 2:
            deleteStudent();
            break;
        case 3:
            modifyStudent();
            break;
        case 4:
            //                searchStudent();
            break;
        case 5:
            showAllStudent();
            break;
        case 0:
            // 保存学生信息到文件
            saveStudent();
            exit(0);
        default:
            std::cout << "输入错误，请重新输入" << endl;
            break;
        }
    }
}
